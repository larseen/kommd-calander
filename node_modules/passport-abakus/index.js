var passportLocal = require("passport-local");
var request = require("request");


module.exports = function(options) {
    if (!process.env.ABAKUS_TOKEN) {
        throw new Error('Missing environment variable ABAKUS_TOKEN');
    }
    options = options || {};
    return new passportLocal.Strategy(function(username, password, done) {
        var url = 'https://abakus.no/api/' + process.env.ABAKUS_TOKEN + '/user/check/';
        var data = {
            'form': {
                'username': username,
                'password': password
            }
        };

        request.post(url, data, function(error, response, body) {
            data = JSON.parse(body);
            if (error || !data.hasOwnProperty('user')) {
                done(null, false, {
                    'message': 'Error in API response'
                });
            } else {
                var user = data.user;
                if (user.auth) {
                    if (options.requireCommittee) {
                        if (user.committees.indexOf(options.requireCommittee) >= 0) {
                            user.username = username;
                            done(null, user);
                        } else {
                            done(null, false, {
                                'message': 'Not in ' + options.requireCommittee + ''
                            });
                        }
                    } else if (options.requireAbakom) {
                        if (user.is_abakom) {
                            user.username = username;
                            done(null, user);
                        } else {
                            done(null, false, {
                                'message': 'Not in abakom'
                            });
                        }
                    } else {
                        user.username = username;
                        done(null, user);
                    }
                } else {
                    done(null, false, {
                        'message': 'Bad credentials'
                    });
                }
            }
        });
    });
};